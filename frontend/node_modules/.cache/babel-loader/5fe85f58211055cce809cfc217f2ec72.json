{"ast":null,"code":"var _jsxFileName = \"/Users/teacher/Desktop/Personal_Projects/react/jasons_website/src/components/Blog/csv_gen.js\";\nimport NavBar from '../Nav-Bar';\nimport Header from '../Header';\nimport CsvNav from '../Blog/blog_images/csv_nav.jpg';\nimport './csv_gen.css';\nimport CsvGif from '../Blog/blog_images/csv_gen.gif';\nimport CsvImg from '../Blog/blog_images/csv.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CsvGen = () => {\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header p-5 mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"World Deity Database\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"09/08/2021\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"CSV Generator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"csv_image\",\n          src: CsvNav\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body_text\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tab\",\n          children: \"The purpose of the Portfolio category on this website is to discuss highlight various UI compomponents implemented in the websites construction. For this purposes of this entry, I will be discussing the interactive category selection in the Blog section of this website. As seen in the above image in the red box.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"fe_image d-flex justify-content-center\",\n          src: categoriesUI\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tab\",\n          children: \"The categories nav-bar basically .\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"fe_image d-flex justify-content-center\",\n              src: blogApp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"fe_image d-flex justify-content-center\",\n              src: entries\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"fe_image d-flex justify-content-center\",\n              src: entryMap\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"fe_image d-flex justify-content-center\",\n              src: categoriesMap\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tab\",\n          children: [\"While not a backend databese, the data.js file houses all data necessary to render on to the corresponding React element. The entries.js file then takes all items in the data.js file, and maps them to corresponding variables in the Entries inline function. The map runs through each item and displays a block of code for each item. Since it runs much like a for loop, if a new entry is added to data.js, a corresponding render of a new blog title card will appear. The categories tag is handled much in the same way, except all the information is rendered as buttons that filter out all differing categories once it is clicked. The categories nav bar also responds to any new categories added. So in the future if I were to add a blog post with a completely new category, a new nav bar option would appear. To see the full code visit my \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://github.com/JpBongiovanni/JB_Portfolio/tree/main/src/components/Blog\",\n            children: \"GitHub\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 877\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CsvGen;\nexport default CsvGen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CsvGen\");","map":{"version":3,"sources":["/Users/teacher/Desktop/Personal_Projects/react/jasons_website/src/components/Blog/csv_gen.js"],"names":["NavBar","Header","CsvNav","CsvGif","CsvImg","CsvGen","categoriesUI","blogApp","entries","entryMap","categoriesMap"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,YAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAO,eAAP;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAK,UAAA,SAAS,EAAC,WAAf;AAA2B,UAAA,GAAG,EAAEH;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,wCAAf;AAAwD,UAAA,GAAG,EAAEI;AAA7D;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAG,UAAA,SAAS,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,wCAAf;AAAwD,cAAA,GAAG,EAAEC;AAA7D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,wCAAf;AAAwD,cAAA,GAAG,EAAEC;AAA7D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,wCAAf;AAAwD,cAAA,GAAG,EAAEC;AAA7D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAUI;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,wCAAf;AAAwD,cAAA,GAAG,EAAEC;AAA7D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAkBI;AAAG,UAAA,SAAS,EAAC,KAAb;AAAA,22BAAw1B;AAAG,YAAA,IAAI,EAAC,6EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAx1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eA+BI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH,CApCD;;KAAML,M;AAsCN,eAAeA,MAAf","sourcesContent":["import NavBar from '../Nav-Bar';\nimport Header from '../Header';\nimport CsvNav from '../Blog/blog_images/csv_nav.jpg';\nimport './csv_gen.css';\nimport CsvGif from '../Blog/blog_images/csv_gen.gif';\nimport CsvImg from '../Blog/blog_images/csv.jpg';\n\nconst CsvGen = () => {\n    return (\n        <body>\n            <Header></Header>\n            <NavBar></NavBar>\n            <div className=\"blog container\">\n                <div className=\"header p-5 mt-5\">\n                    <h1>World Deity Database</h1>\n                    <h3>09/08/2021</h3>\n                    <h2>CSV Generator</h2>\n                    <img className=\"csv_image\" src={CsvNav} />\n                </div>\n                <div className=\"body_text\">\n                    <p className=\"tab\">The purpose of the Portfolio category on this website is to discuss highlight various UI compomponents implemented in the websites construction. For this purposes of this entry, I will be discussing the interactive category selection in the Blog section of this website. As seen in the above image in the red box.</p>\n                    <img className=\"fe_image d-flex justify-content-center\" src={categoriesUI} />\n                    <p className=\"tab\">The categories nav-bar basically .</p>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <img className=\"fe_image d-flex justify-content-center\" src={blogApp} />\n                        </div>\n                        <div className=\"col\">\n                            <img className=\"fe_image d-flex justify-content-center\" src={entries} />\n                        </div>\n                        <div className=\"col\">\n                            <img className=\"fe_image d-flex justify-content-center\" src={entryMap} />\n                        </div>\n                        <div className=\"col\">\n                            <img className=\"fe_image d-flex justify-content-center\" src={categoriesMap} />\n                        </div>\n                    </div>\n                    <p className=\"tab\">While not a backend databese, the data.js file houses all data necessary to render on to the corresponding React element. The entries.js file then takes all items in the data.js file, and maps them to corresponding variables in the Entries inline function. The map runs through each item and displays a block of code for each item. Since it runs much like a for loop, if a new entry is added to data.js, a corresponding render of a new blog title card will appear. The categories tag is handled much in the same way, except all the information is rendered as buttons that filter out all differing categories once it is clicked. The categories nav bar also responds to any new categories added. So in the future if I were to add a blog post with a completely new category, a new nav bar option would appear. To see the full code visit my <a href=\"https://github.com/JpBongiovanni/JB_Portfolio/tree/main/src/components/Blog\">GitHub</a></p>\n                </div>\n            </div>\n            <NavBar></NavBar>\n        </body>\n    )\n}\n\nexport default CsvGen"]},"metadata":{},"sourceType":"module"}