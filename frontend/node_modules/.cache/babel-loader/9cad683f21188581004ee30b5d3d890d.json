{"ast":null,"code":"var _jsxFileName = \"/Users/teacher/Desktop/Personal_Projects/react/jasons_website/src/components/Blog/solidity_practice.js\";\nimport NavBar from '../Nav-Bar';\nimport Header from '../Header';\nimport metamask from './blog_images/metamask.jpg';\nimport simpleStorage from './blog_images/simple_storage.jpg';\nimport storageFactory from './blog_images/storage_factory.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SolidityPractice = () => {\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header p-5 mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Blockchain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"09/10/2021\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Solididty Practice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body_text\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tab\",\n          children: [\"My dive into Blockchain and Solidity is aided by \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"reeCodeCamp.com's 16 hour tutorial on Youtube.\",\n            children: \"freeCodeCamp.com's 16 hour tutorial on Youtube.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 89\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"fe_image d-flex justify-content-center\",\n          src: metamask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tab\",\n          children: \"As the above gif demonstrates, all that the user needs to do is to click the \\\"Generate CSV\\\" button in the NavBar to start the process\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"fe_image d-flex justify-content-center\",\n          src: simpleStorage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tab\",\n          children: \"Once the program has run its course, the CSV can be opened, manipulated, imported to another database, and saved.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"fe_image d-flex justify-content-center\",\n          src: storageFactory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tab\",\n          children: [\"The function in views.py returns an HttpResponse that takes the content type of \\\"text/csv.\\\" Because every column in my database is not really necessary to export (like contributor id, or upload date), the function writes rows based on the selected columns, skipping over the ones not selected. Check out the full code on \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"GitHub\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 400\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 346\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SolidityPractice;\nexport default SolidityPractice;\n\nvar _c;\n\n$RefreshReg$(_c, \"SolidityPractice\");","map":{"version":3,"sources":["/Users/teacher/Desktop/Personal_Projects/react/jasons_website/src/components/Blog/solidity_practice.js"],"names":["NavBar","Header","metamask","simpleStorage","storageFactory","SolidityPractice"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,YAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,cAAP,MAA2B,mCAA3B;;;AAGA,MAAMC,gBAAgB,GAAG,MAAM;AAC3B,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC,KAAb;AAAA,uFAAoE;AAAG,YAAA,IAAI,EAAC,gDAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAApE;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,wCAAf;AAAwD,UAAA,GAAG,EAAEH;AAA7D;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAG,UAAA,SAAS,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAK,UAAA,SAAS,EAAC,wCAAf;AAAwD,UAAA,GAAG,EAAEC;AAA7D;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAG,UAAA,SAAS,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAQI;AAAK,UAAA,SAAS,EAAC,wCAAf;AAAwD,UAAA,GAAG,EAAEC;AAA7D;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI;AAAG,UAAA,SAAS,EAAC,KAAb;AAAA,yWACqU;AAAG,YAAA,IAAI,EAAC,GAAR;AAAY,YAAA,MAAM,EAAC,QAAnB;AAA4B,YAAA,GAAG,EAAC,qBAAhC;AAAA,mCAAsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtD;AAAA;AAAA;AAAA;AAAA,kBADrU;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAuBI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CA5BD;;KAAMC,gB;AA8BN,eAAeA,gBAAf","sourcesContent":["import NavBar from '../Nav-Bar';\nimport Header from '../Header';\nimport metamask from './blog_images/metamask.jpg';\nimport simpleStorage from './blog_images/simple_storage.jpg';\nimport storageFactory from './blog_images/storage_factory.jpg';\n\n\nconst SolidityPractice = () => {\n    return (\n        <body>\n            <Header></Header>\n            <NavBar></NavBar>\n            <div className=\"blog container\">\n                <div className=\"header p-5 mt-5\">\n                    <h1>Blockchain</h1>\n                    <h3>09/10/2021</h3>\n                    <h2>Solididty Practice</h2>\n                </div>\n                <div className=\"body_text\">\n                    <p className=\"tab\">My dive into Blockchain and Solidity is aided by <a href=\"reeCodeCamp.com's 16 hour tutorial on Youtube.\">freeCodeCamp.com's 16 hour tutorial on Youtube.</a></p>\n                    <img className=\"fe_image d-flex justify-content-center\" src={metamask}/>\n                    <p className=\"tab\">As the above gif demonstrates, all that the user needs to do is to click the \"Generate CSV\" button in the NavBar to start the process</p>\n                    <img className=\"fe_image d-flex justify-content-center\" src={simpleStorage}/>\n                    <p className=\"tab\">\n                        Once the program has run its course, the CSV can be opened, manipulated, imported to another database, and saved.\n                    </p>\n                    <img className=\"fe_image d-flex justify-content-center\" src={storageFactory}/>\n                    <p className=\"tab\">\n                        The function in views.py returns an HttpResponse that takes the content type of \"text/csv.\" Because every column in my database is not really necessary to export (like contributor id, or upload date), the function writes rows based on the selected columns, skipping over the ones not selected. Check out the full code on <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>GitHub</strong></a>.\n                    </p>\n                </div>\n            </div>\n            <NavBar></NavBar>\n        </body>\n    )\n}\n\nexport default SolidityPractice"]},"metadata":{},"sourceType":"module"}